<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.main.careerbro.modules.salary.dao.SalaryDao">

    <sql id="salaryColumns">
        a.id as id,
        c.cname as city,
        j.cname as job,
        u.petname as user,
        col.cname as college,
        i.canme as industry,
        cor.cname as corperation,
        a.year_salary_max as yearSalaryMax,
        a.year_salary_min as yearSalaryMin,
        a.month_salary as monthSalary,
        a.month_num	as monthNum,
        a.welfare as welfare,
        a.college_level	as collegeLevel,
        a.edu_background as eduBackGround,
        a.offer_time as offerTime,
        a.experience_month_num as experienceMonthNum,
        a.agree_num	as agreeNum,
        a.opp_num as oppNum,
        a.gra_num as graNum,
        a.share_num as shareNum,
        a.reserve_num as reserveNum,
        a.create_time as createTime,
        a.update_time as updateTime

    </sql>

    <sql id="salaryJoins">
        LEFT JOIN dstrict c ON c.id = a.city_id
        LEFT JOIN  job j ON j.id = a.job_id
        LEFT JOIN user u ON u.id = user_id
        LEFT JOIN college col ON col.id = college_id
        LEFT JOIN industry i ON i.id = industry_id
        LEFT JOIN corperation cor ON cor.id = cor_id
    </sql>

    <select id="getSalaryByUser" resultType="com.main.careerbro.modules.salary.entity.Salary">
        SELECT 
        <include refid="salaryColumns"/>
        <include refid="salaryJoins"/>
        FROM salary a
        WHERE a.user_id = #{userId}
        ORDER BY a.create_time AND a.update_time
    </select>

    <select id="getSalaryById" resultType="com.main.careerbro.modules.salary.entity.Salary">
        SELECT
        <include refid="salaryColumns"/>
        <include refid="salaryJoins"/>
        FROM salary a
        WHERE a.id = #{id}
        ORDER BY a.create_time AND a.update_time
    </select>

    <select id="getAllSalary" resultType="com.main.careerbro.modules.salary.entity.Salary">
        SELECT
        <include refid="salaryColumns"/>
        <include refid="salaryJoins"/>
        FROM salary a
        ORDER BY a.create_time AND a.update_time
    </select>

    <insert id="saveSalary">
        INSERT INTO salary(
        id,
        city_id,
        job_id,
        user_id,
        college_id,
        industry_id,
        cor_id,
        year_salary_max,
        year_salary_min,
        month_salary,
        month_num,
        welfare,
        college_level,
        edu_background,
        offer_time,
        experience_month_num,
        agree_num,
        opp_num,
        gra_num,
        share_num,
        reserve_num,
        create_time,
        update_time
        )VALUES (
        #{id},
        #{cityId},
        #{jobId},
        #{userId},
        #{collegeId},
        #{industryId},
        #{corId},
        #{yearSalaryMax},
        #{yearSalaryMin},
        #{monthSalary},
        #{monthNum},
        #{welfare},
        #{collegeLevel},
        #{eduBackground},
        #{offerTime},
        #{experienceMonthNum},
        0,
        0,
        0,
        0,
        0,
        NOW(),
        NOW()
        )
    </insert>

    <update id="updateSalary">
        UPDATE salary
        SET city_id = #{cityId},
        job_id = #{jobId},
        user_id = #{userId},
        college_id = #{collegeId},
        industry_id = #{industryId},
        cor_id = #{corId},
        year_salary_max = #{yearSalaryMax},
        year_salary_min = #{yearSalaryMin},
        month_salary = #{monthSalary},
        month_num = #{monthNum},
        welfare = #{welfare},
        college_level = #{collegeLevel},
        edu_background = #{eduBackground},
        offer_time = #{offerTime},
        experience_month_num = #{experienceMonthNum},
        update_time = NOW()
        WHERE id = #{id}
    </update>

    <select id="getEvaSystemReserve" resultType="com.main.careerbro.modules.salary.entity.Salary">
        SELECT
        <include refid="salaryColumns"/>
        <include refid="salaryJoins"/>
        FROM salary a
        RIGHT JOIN eva_system eva on eva.salary_id = a.id
        WHERE eva.user_id = #{uid}
        AND eva.reserve = 1
    </select>
</mapper>